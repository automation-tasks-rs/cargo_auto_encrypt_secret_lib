var searchIndex = new Map(JSON.parse('[\
["encrypt_secret",{"doc":"encrypt_secret","t":"FKNNHMHHHNHMNMHCCNNNCNIHHHOKMHHMMSSSSSHH","n":["EncryptedString","SshContextTrait","borrow","borrow_mut","crate_ssh_agent_client","decrypt_from_file_data","decrypt_with_ssh_interactive_from_file","encrypt_with_ssh_interactive_save_file","file_path_home_expand","from","get_fingerprint_from_file","get_token_and_encrypt","into","sign_with_ssh_agent_or_identity_file","ssh_add_list_contains_fingerprint","ssh_mod","ssh_sign_crypt_mod","try_from","try_into","type_id","utils_mod","vzip","FingerprintString","crate_ssh_agent_client","get_fingerprint_from_file","ssh_add_list_contains_fingerprint","vec","SshContextTrait","decrypt_from_file_data","decrypt_with_ssh_interactive_from_file","encrypt_with_ssh_interactive_save_file","get_token_and_encrypt","sign_with_ssh_agent_or_identity_file","BLUE","GREEN","RED","RESET","YELLOW","file_path_home_expand","home_dir"],"q":[[0,"encrypt_secret"],[22,"encrypt_secret::ssh_mod"],[27,"encrypt_secret::ssh_sign_crypt_mod"],[33,"encrypt_secret::utils_mod"],[40,"ssh_agent_client_rs"],[41,"camino"],[42,"camino"],[43,"ssh_key::public"],[44,"core::option"],[45,"core::result"],[46,"core::any"]],"d":["A simple wrapper new-type around String just to show …","","","","The work with ssh_agent_client_rs starts with the client …","","Decrypt token from file (json encoded in Base64) with the …","Encrypt token with the chosen ssh_identity and save as …","Expands the ~ for home_dir and returns expanded path as str","Returns the argument unchanged.","Get the fingerprint of a public key","","Calls <code>U::from(self)</code>.","","Returns the public_key inside ssh-add or None","","How to save a GitHub TOKEN securely inside a file?","","","","various utilities","","A simple type-alias for String just to show intent that it …","The work with ssh_agent_client_rs starts with the client …","Get the fingerprint of a public key","Returns the public_key inside ssh-add or None","","","","Decrypt token from file (json encoded in Base64) with the …","Encrypt token with the chosen ssh_identity and save as …","","","ANSI color","ANSI color","ANSI color","ANSI color","ANSI color","Expands the ~ for home_dir and returns expanded path as str","home_dir() using the home crate panics if HOME not found"],"i":[0,0,3,3,0,2,0,0,0,3,0,2,3,2,0,0,0,3,3,3,0,3,0,0,0,0,15,0,2,0,0,2,2,0,0,0,0,0,0,0],"f":"``{ce{}{}}0{{}b}{{df}h}{{cj}hd}{{cjj}hd}{jl}{cc{}}{jn}{df}8{{dj{Ab{A`}}}h}{{bAd}{{Ah{Af}}}}``{c{{Aj{e}}}{}{}}0{cAl{}}`<`;52``:9843`````7{{}l}","c":[],"p":[[5,"Client",40],[10,"SshContextTrait",27],[5,"EncryptedString",0],[1,"unit"],[5,"Utf8Path",41],[5,"Utf8PathBuf",41],[5,"String",42],[1,"u8"],[1,"array"],[1,"str"],[5,"PublicKey",43],[6,"Option",44],[6,"Result",45],[5,"TypeId",46],[8,"FingerprintString",22]],"b":[]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
