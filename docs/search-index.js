var searchIndex = new Map(JSON.parse('[\
["encrypt_secret",{"doc":"encrypt_secret","t":"HHHHCCFNNHHHHNNHNNNN","n":["decrypt_symmetric","decrypt_symmetric_with_password","encrypt_symmetric","encrypt_symmetric_with_password","symmetric_mod","utils_mod","EncryptedString","borrow","borrow_mut","decrypt_symmetric","decrypt_symmetric_with_password","encrypt_symmetric","encrypt_symmetric_with_password","from","into","password_to_passcode","try_from","try_into","type_id","vzip"],"q":[[0,"encrypt_secret"],[6,"encrypt_secret::symmetric_mod"],[20,"secrecy::vec"],[21,"secrecy::string"],[22,"core::option"],[23,"core::result"],[24,"core::any"]],"d":["Decrypts encrypted_string with secret_passcode_bytes","Decrypts encrypted_string with secret_password","Encrypts secret_string with secret_passcode_bytes","Encrypts secret_string with secret_password","","various utilities","A simple wrapper new-type around String just to show â€¦","","","Decrypts encrypted_string with secret_passcode_bytes","Decrypts encrypted_string with secret_password","Encrypts secret_string with secret_passcode_bytes","Encrypts secret_string with secret_password","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Converts a human readable password to a bytes passcode","","","",""],"i":[0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,1,1,1,1],"f":"{{b{f{d}}}{{j{h}}}}{{bh}{{j{h}}}}{{h{f{d}}}{{j{b}}}}{{hh}{{j{b}}}}```{ce{}{}}04321{cc{}}1{l{{f{d}}}}{c{{n{e}}}{}{}}0{cA`{}}4","c":[],"p":[[5,"EncryptedString",6],[1,"u8"],[8,"SecretVec",20],[8,"SecretString",21],[6,"Option",22],[1,"str"],[6,"Result",23],[5,"TypeId",24]],"b":[]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
