var searchIndex = new Map(JSON.parse('[\
["encrypt_secret",{"doc":"encrypt_secret","t":"FHHHHHHCCCCIHHHHOHHFNNHHHHNNHNNNNSSSSSHH","n":["EncryptedString","decrypt_symmetric","decrypt_symmetric_with_password","decrypt_with_ssh_interactive_from_file","encrypt_symmetric","encrypt_symmetric_with_password","encrypt_with_ssh_interactive_save_file","ssh_mod","ssh_sign_crypt_mod","symmetric_crypt_mod","utils_mod","FingerprintString","crate_ssh_agent_client","get_fingerprint_from_file","sign_with_ssh_agent_or_identity_file","ssh_add_list_contains_fingerprint","vec","decrypt_with_ssh_interactive_from_file","encrypt_with_ssh_interactive_save_file","EncryptedString","borrow","borrow_mut","decrypt_symmetric","decrypt_symmetric_with_password","encrypt_symmetric","encrypt_symmetric_with_password","from","into","password_to_passcode","try_from","try_into","type_id","vzip","BLUE","GREEN","RED","RESET","YELLOW","file_path_home_expand","home_dir"],"q":[[0,"encrypt_secret"],[11,"encrypt_secret::ssh_mod"],[17,"encrypt_secret::ssh_sign_crypt_mod"],[19,"encrypt_secret::symmetric_crypt_mod"],[33,"encrypt_secret::utils_mod"],[40,"secrecy::vec"],[41,"secrecy::string"],[42,"core::option"],[43,"camino"],[44,"ssh_agent_client_rs"],[45,"alloc::string"],[46,"ssh_key::public"],[47,"core::result"],[48,"core::any"],[49,"camino"]],"d":["A simple wrapper new-type around String just to show …","Decrypts encrypted_string with secret_passcode_bytes","Decrypts encrypted_string with secret_password","Decrypt token from file (json encoded in Base64) with the …","Encrypts secret_string with secret_passcode_bytes","Encrypts secret_string with secret_password","Encrypt token with the chosen ssh_identity and save as …","","How to save a GitHub TOKEN securely inside a file?","","various utilities","A simple type-alias for String just to show intent that it …","The work with ssh_agent_client_rs starts with the client …","Get the fingerprint of a public key","Sign with ssh-agent or with identity_file","Returns the public_key inside ssh-add or None","","Decrypt token from file (json encoded in Base64) with the …","Encrypt token with the chosen ssh_identity and save as …","A simple wrapper new-type around String just to show …","","","Decrypts encrypted_string with secret_passcode_bytes","Decrypts encrypted_string with secret_password","Encrypts secret_string with secret_passcode_bytes","Encrypts secret_string with secret_password","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Converts a human readable password to a bytes passcode","","","","","ANSI color","ANSI color","ANSI color","ANSI color","ANSI color","Expands the ~ for home_dir and returns expanded path as str","home_dir() using the home crate panics if HOME not found"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,1,1,0,0,0,0,1,1,0,1,1,1,1,0,0,0,0,0,0,0],"f":"`{{b{f{d}}}{{j{h}}}}{{bh}{{j{h}}}}{l{{j{h}}}}{{h{f{d}}}{{j{b}}}}{{hh}{{j{b}}}}{{ll}n}`````{{}A`}{lAb}{{l{Ad{d}}}{{f{d}}}}{{A`Af}{{j{Ah}}}}`74`{ce{}{}}0:976{cc{}}1{Af{{f{d}}}}{c{{Aj{e}}}{}{}}0{cAl{}}4`````{lAn}{{}An}","c":[],"p":[[5,"EncryptedString",19],[1,"u8"],[8,"SecretVec",40],[8,"SecretString",41],[6,"Option",42],[5,"Utf8Path",43],[1,"unit"],[5,"Client",44],[5,"String",45],[1,"array"],[1,"str"],[5,"PublicKey",46],[6,"Result",47],[5,"TypeId",48],[5,"Utf8PathBuf",43],[8,"FingerprintString",11]],"b":[]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
